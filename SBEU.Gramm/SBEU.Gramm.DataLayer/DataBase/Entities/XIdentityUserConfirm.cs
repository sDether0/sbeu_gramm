using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using SBEU.Gramm.DataLayer.DataBase.Entities.Base;

namespace SBEU.Gramm.DataLayer.DataBase.Entities
{
    public class XIdentityUserConfirm : BaseEntity
    {
        public XIdentityUserConfirm()
        {
            ConfirmCode = RandomString(8);
        }
        public string? Email { get; set; }
        public string? UserName { get; set; }
        [JsonIgnore]
        public string UserId { get; set; }
        [JsonIgnore]
        public string ConfirmCode { get; init; }
        [JsonIgnore]
        public string MailCode { get; init; }
        /// <summary>
        /// It generates a random string of a given length.
        /// </summary>
        /// <param name="length">The length of the string to be generated.</param>
        /// <returns>
        /// A random string of length 10.
        /// </returns>
        private static string RandomString(int length)
        {
            var random = new Random();
            const string chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
            return new string(Enumerable.Repeat(chars, length)
                .Select(s => s[random.Next(s.Length)]).ToArray());
        }

        
        /// <summary>
        /// It returns a boolean value that indicates whether the code passed in as a parameter matches
        /// the code that was generated by the server
        /// </summary>
        /// <param name="code">The code that the user entered</param>
        /// <returns>
        /// A boolean value.
        /// </returns>
        public async Task<bool> TryToConfirm(string code)
        {
            var result = ConfirmCode == code;
            return result;
        }
    }
}
